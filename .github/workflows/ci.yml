name: Material Studio dump Build and Release Bleed

on:
  push:
    branches:
      - master

jobs:
  UbuntuBuild:
    runs-on: ubuntu-22.04

    defaults:
        run:
          working-directory: ./MS_dump

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up build tools
        run: |
          sudo apt update
          sudo apt install -y build-essential g++

      - name: Build the project
        run: |
          make -j4

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MS_dump_Linux
          path: ./MS_dump/MS_dump

  Mingw64Build:
    runs-on: windows-2019
    defaults:
      run:
        working-directory: ./MS_dump
      
    steps:
      - name: git source
        uses: actions/checkout@v2
      
      - name: Set up Msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          update: true
          install: >-
            make
          pacboy: >-
            toolchain:p

      - name: Build the project
        run: |
          make -j4

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MS_dump_Windows
          path: ./MS_dump/MS_dump.exe


  # refer to https://github.com/endless-sky/endless-sky/blob/master/.github/workflows/cd.yaml
  Release:
    needs: [UbuntuBuild, Mingw64Build]
    runs-on: ubuntu-latest

    env:
        RELEASE_COMMAND: release
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_TAG: bleed
        OUTPUT_TAR: MS_dump_Linux_and_Win.tar.gz

    steps:
      - uses: actions/checkout@v3

      - name: Install github-release
        run: |
          go install github.com/github-release/github-release@latest
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      
      - name: Set environment variables
        run: |
          echo "RELEASE_TAG=bleed" >> $GITHUB_ENV
          echo "TIME=$(date -u '+%Y.%m.%d')" >> $GITHUB_ENV
          echo "GITHUB_USER=$( echo ${{ github.repository }} | cut -d/ -f1 )" >> $GITHUB_ENV
          echo "GITHUB_REPO=$( echo ${{ github.repository }} | cut -d/ -f2 )" >> $GITHUB_ENV

      - name: Move/Create continuous tag
        run: |
          git tag --force ${{ env.RELEASE_TAG }} ${{ github.sha }}
          git push --tags --force
      
      - name: Check continuous release status
        run: |
          if ! github-release info -t ${{ env.RELEASE_TAG }} > /dev/null 2>&1; then
            echo "RELEASE_COMMAND=release" >> $GITHUB_ENV
          else
            echo "RELEASE_COMMAND=edit" >> $GITHUB_ENV
          fi
      
      - name: Setup continuous release
        run: |
          DESCRIPTION="Triggered on $(date -u '+%Y/%m/%d, %H:%M') UTC by commit ${{ github.sha }} (@${{ github.actor }})
          This is an automated build of the latest source. It may be unstable or even crash, corrupt your save or eat your kitten. Use with caution!
          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          github-release ${{env.RELEASE_COMMAND}} --tag ${{ env.RELEASE_TAG }} --name "Latest Bleed Release" --description "$DESCRIPTION" --pre-release

      - name: Download artifacts
        run: gh run download --repo "$GITHUB_REPOSITORY" "$GITHUB_RUN_ID"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Package Linux and Windows artifact to release
        run: |
          ls -alt
          tar -czvf ${{env.OUTPUT_TAR}} MS_dump MS_dump.exe
          github-release upload --tag ${{ env.RELEASE_TAG }} --replace --name ${{env.OUTPUT_TAR}} --file ${{env.OUTPUT_TAR}}

